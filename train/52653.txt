
जावा ही एक प्रोग्रॅमिंग लँग्वेज आहे. जावा ही 'सन मायक्रो सिस्टिम' ह्या कंपनीने विकसित केली आणि सर्वप्रथम सन १९९५ च्या सुमारास सार्वजनिकपणे उपलब्ध केली. जावामध्ये एकदा लिहिलेला प्रोग्राम कुठल्याही मशीनवर कुठल्याही ऑपरेटिंग सिस्टिमवर वापरता येतो. इंटरनेटशी संबंधित असल्याने जावाचा प्रसार शिक्षणक्षेत्र, करमणूक क्षेत्र व मल्टिमिडियाच्या क्षेत्रात वेगाने होत आहे. यात प्रोग्राम लिहिणे अधिक सोपे जाते. यूजरने दिलेल्या सूचनांनुसार संगणक प्रोग्राममध्ये स्वत:हून बदल घडवून आणतो. 
जावा ही 'सर्व्हर सॉफ्टवेर' तसेच 'वेब-बेस्ड सॉफ्टवेर्स' ह्या क्षेत्रांमध्ये मोठ्या प्रमाणावर लोकप्रिय आहे.त्याचप्रमाणे हाताळण्याइतक्या लहान काँप्युटर व इलेक्ट्रॉनिक उपकरणांमध्ये जावाचा वापर केला जातो.
जावाचे मुख्य उद्दिष्ट्य तिच्या 'एकदा लिहा, सर्वत्र वापरा' अर्थात 'Write once, run everywhere' ह्या ब्रीदवाक्यातून ध्वनीत होते. याचा अर्थ 'जावामध्ये एकदा तयार केलेले सॉफ्टवेर, जावा असलेल्या दुसऱ्या कुठल्याही काँप्युटर सिस्टिमवर चालते' असा आहे. जावा ही पूर्णपणे वस्तुनिष्ठ संगणक आज्ञावली आहे. म्हणजे जावातील सर्व आज्ञा विशिष्ठ वर्गात लिहिल्या जातात.मग या वर्गाची वस्तू तयार करून आपल्याला त्यातील आज्ञा कार्यान्वित करता येतात. अश्या कितीही वस्तू आपण तयार करू शकतो म्हणूनच जावा ही कोड-पुनर्वापराला मदत करते. 
एका प्राथमिक आज्ञावलीचे उदाहरण:
हा प्रोग्रॅम चालविल्यानंतर संगणकाच्या पडद्यावर "Hello World" अशी अक्षरे दिसतील.
एका प्राथमिक आज्ञावलीचे उदाहरण:
हा प्रोग्रॅम चालविल्यानंतर संगणकाच्या पडद्यावर "Welcome to World of Core Java Programming" अशी अक्षरे दिसतील.
ॲपलेट म्हणजे एक जावा प्रोग्राम जो वेब ब्राऊजरमधे चालतो. 
2.	ऍपलेट एक संपूर्ण कार्यात्मक जावा ऍप्लिकेशन असू शकते कारण त्याच्याकडे संपूर्ण जावा एपीआय आहे. 3.	ऍपलेट आणि स्टँडअलोन जावा ऍप्लिकेशनमधील काही महत्त्वाच्या फरक आहेत, ज्यात खालील गोष्टींचा समावेश आहे - ऍपलेट जावा क्लास आहे जे java.applet.pleple class वाढवते. 4.	ऍपलेटवर मुख्य पद्धत लागू केली जात नाही, आणि ऍपलेट क्लास मुख्य परिभाषित करणार नाही ॲप्पलेट्स एका HTML पृष्ठामध्ये एम्बेड करण्यासाठी डिझाइन केले आहेत.5.	एखादे ऍपलेट असणारे एक HTML पृष्ठ पाहताना, ऍपलेटसाठीचा कोड वापरकर्त्याच्या मशीनवर डाऊनलोड केला जातो. ऍपलेट पाहण्यासाठी एक JVM आवश्यक आहे JVM हे एकतर वेब ब्राऊजरचे प्लग-इन किंवा वेगळे रनटाइम पर्यावरण असू शकते. 6.	वापरकर्त्याच्या मशीनवरील JVM ऍपलेट क्लासचे उदाहरण बनवते आणि ऍपलेटच्या जीवनकाळात विविध पद्धती वापरते ऍपलेट्सचे कडक सुरक्षा नियम आहेत जे वेब ब्राउझरद्वारे लागू केले जातात. 7.	ऍप्लेटची सुरक्षा बर्याचदा सॅन्डबॉक्सची सुरक्षा म्हणून ओळखली जाते, ऍप्लेटची तुलना वेगवेगळ्या नियमात सँडबॉक्समध्ये खेळत असलेल्या मुलाशी केली जाते. इतर वर्ग जे ऍप्पलेटच्या गरजा एका एकल जावा आर्काइव्ह फाइलमध्ये डाउनलोड करता येतील. 8.	ऍप्लेटचा लाइफ सायकल ऍपलेट क्लासमच्या चार पद्धतीमुळे आपण जी फ्रेमलेट तयार करतो ज्यावर आपण गंभीर ऍपलेट तयार करता - init - आपल्या ऍपलेटसाठी आवश्यक असलेली सर्वप्रकारे ही पद्धत आहे. 9.	हे ऍपलट टॅगच्या आत परम टॅग्जवर प्रक्रिया केल्याच्या नंतर म्हटले जाते. 10.	start - ही पद्धत ब्राउझरला init पद्धतीस कॉल केल्यानंतर आपोआप कॉल केला जातो. जेव्हाही पृष्ठावर ऍप्लेट असलेल्या पृष्ठावर परत येते तेव्हा हे इतर पृष्ठांवर परत गेल्यानंतर देखील म्हटले जाते. 11.	थांबवा - ही पद्धत आपोआप नावावली जाते जेव्हा उपयोक्ता पृष्ठ बंद करतो ज्यावर ऍपलेट बसते. म्हणून, त्याच ऍपलेटमध्ये वारंवार बोलावले जाऊ शकते. 12.	नष्ट करा - ही पद्धत केवळ तेव्हा म्हटले जाते जेव्हा ब्राउझर साधारणपणे बंद होते ऍपलेट्स एका एचटीएमएल पृष्ठावर जगण्यासाठी असतात, कारण ऍपलेट असलेल्या पृष्ठावरुन वापरकर्त्याने पृष्ठ सोडून दिल्यानंतर आपण सहसा स्त्रोत मागे सोडू नये. पेंट a.	प्रारंभ पध्दतीनंतर ताबडतोब आक्षेप घेतला जातो, आणि कोणत्याही वेळी ॲपप्लेटला ब्राउझरमध्ये स्वत: ला पुन्हा रंगण्याची आवश्यकता असते. पेंट पद्धत प्रत्यक्षात java.awt पासून वारशाने आहे.
